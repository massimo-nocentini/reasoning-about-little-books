2014-01-03  Massimo Nocentini  <massimo.nocentini@gmail.com>

	* little-mler.sml (LittleMLer): Introduce the ``prefixer''
	function and its variants, using the two strategy for combining
	slists.

	* sexp-expressions.sml (SExpressions.combine_slist_curried): Add
	the curried strategy for combining two slists.
	(SExpressions.combine_slist_staged): Add the staged strategy for
	combining two slists.
	(SExpressions.combine_sexp): Refactor the function in order to
	emphasize the differences among the two curried vs staged
	strategies for combining two slists.

2013-12-31  Massimo Nocentini  <massimo.nocentini@gmail.com>

	* sexp-expressions-tests.sml (SExpressionsTests): Add the
	necessary tests for the ``combine'' function.

	* sexp-expressions.sml (SExpressions.combine_sexp): Add the
	implementation of the ``combine'' function, something similar to
	``@'' in Standard ML.

	* hop-skip-jump.sml (HopSkipAndJump.letcc): make a fun instead of
	a val in order to better type check it.

	* little-mler.sml: Big bang for this file.

	* Makefile: Add a new clause for running the tests and for running
	a scratch input pad.

	* test-input.sml: give a more SML structure for the suite running.

	* little-schemer-tests.sml (LittleSchemerTests): add the missing
	tests for the last five steps of Y derivation and add nine tests
	for the ``length'' function, using the three different techniques.

	* little-schemer.sml: removed unnecessary parens from patterns and
	introduce a unique parameter for ``fn arg => ...'' expressions in order
	to substitute it with ``case a of ...'' to have a better indentation.
	(LittleSchemer): add reference to
	http://www.cs.cornell.edu/courses/cs3110/2008fa/recitations/rec26.html
	to record the great help that page provide on the use of G for
	self application.

2013-12-29  Massimo Nocentini  <massimo.nocentini@gmail.com>

	* little-schemer.sml (LittleSchemer.length_with_collector): done
	some.
	(LittleSchemer.length_with_accumulator): imple.
	(LittleSchemer.length_with_collector.L): implementation of inner
	function L using the collector paradigm.
	(LittleSchemer.length_with_collector.L): hel

